// Auto-generated. Do not edit!

// (in-package trajectory_generators.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class robotTrajectory_Goal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.some_goal_data = null;
      this.joint_positions = null;
      this.joint_velocities = null;
      this.joint_accelerations = null;
      this.timestamp = null;
    }
    else {
      if (initObj.hasOwnProperty('some_goal_data')) {
        this.some_goal_data = initObj.some_goal_data
      }
      else {
        this.some_goal_data = 0;
      }
      if (initObj.hasOwnProperty('joint_positions')) {
        this.joint_positions = initObj.joint_positions
      }
      else {
        this.joint_positions = [];
      }
      if (initObj.hasOwnProperty('joint_velocities')) {
        this.joint_velocities = initObj.joint_velocities
      }
      else {
        this.joint_velocities = [];
      }
      if (initObj.hasOwnProperty('joint_accelerations')) {
        this.joint_accelerations = initObj.joint_accelerations
      }
      else {
        this.joint_accelerations = [];
      }
      if (initObj.hasOwnProperty('timestamp')) {
        this.timestamp = initObj.timestamp
      }
      else {
        this.timestamp = {secs: 0, nsecs: 0};
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type robotTrajectory_Goal
    // Serialize message field [some_goal_data]
    bufferOffset = _serializer.int32(obj.some_goal_data, buffer, bufferOffset);
    // Serialize message field [joint_positions]
    bufferOffset = _arraySerializer.float64(obj.joint_positions, buffer, bufferOffset, null);
    // Serialize message field [joint_velocities]
    bufferOffset = _arraySerializer.float64(obj.joint_velocities, buffer, bufferOffset, null);
    // Serialize message field [joint_accelerations]
    bufferOffset = _arraySerializer.float64(obj.joint_accelerations, buffer, bufferOffset, null);
    // Serialize message field [timestamp]
    bufferOffset = _serializer.time(obj.timestamp, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type robotTrajectory_Goal
    let len;
    let data = new robotTrajectory_Goal(null);
    // Deserialize message field [some_goal_data]
    data.some_goal_data = _deserializer.int32(buffer, bufferOffset);
    // Deserialize message field [joint_positions]
    data.joint_positions = _arrayDeserializer.float64(buffer, bufferOffset, null)
    // Deserialize message field [joint_velocities]
    data.joint_velocities = _arrayDeserializer.float64(buffer, bufferOffset, null)
    // Deserialize message field [joint_accelerations]
    data.joint_accelerations = _arrayDeserializer.float64(buffer, bufferOffset, null)
    // Deserialize message field [timestamp]
    data.timestamp = _deserializer.time(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += 8 * object.joint_positions.length;
    length += 8 * object.joint_velocities.length;
    length += 8 * object.joint_accelerations.length;
    return length + 24;
  }

  static datatype() {
    // Returns string type for a message object
    return 'trajectory_generators/robotTrajectory_Goal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '47c4fc2645bd1adfeac90d59b052c443';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Define the goal
    int32 some_goal_data
    float64[] joint_positions
    float64[] joint_velocities
    float64[] joint_accelerations
    time timestamp
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new robotTrajectory_Goal(null);
    if (msg.some_goal_data !== undefined) {
      resolved.some_goal_data = msg.some_goal_data;
    }
    else {
      resolved.some_goal_data = 0
    }

    if (msg.joint_positions !== undefined) {
      resolved.joint_positions = msg.joint_positions;
    }
    else {
      resolved.joint_positions = []
    }

    if (msg.joint_velocities !== undefined) {
      resolved.joint_velocities = msg.joint_velocities;
    }
    else {
      resolved.joint_velocities = []
    }

    if (msg.joint_accelerations !== undefined) {
      resolved.joint_accelerations = msg.joint_accelerations;
    }
    else {
      resolved.joint_accelerations = []
    }

    if (msg.timestamp !== undefined) {
      resolved.timestamp = msg.timestamp;
    }
    else {
      resolved.timestamp = {secs: 0, nsecs: 0}
    }

    return resolved;
    }
};

module.exports = robotTrajectory_Goal;
